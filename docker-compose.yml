# version: '3.8'

services:
  app:
    build: users_api
    container_name: users_api
    restart: always
    ports:
      - '8000:8000'
    volumes:
      - ./users_api:/var/www/html/users_api
    environment:
      DATABASE_URL: "mysql://${DB_USER}:${DB_PASSWORD}@db:3306/${DB}?serverVersion=8.0"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - users_api_network

  db:
    image: mysql:8.0
    container_name: users_api_mysql
    restart: always
    environment:
      MYSQL_DATABASE: ${DB}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - '3306:3306'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 30s # to ensure enough time if db is initializing
      timeout: 5s
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/mysql # To save db data locally
    networks:
      - users_api_network

networks:
  users_api_network:
    driver: bridge

volumes:
  db_data: 
